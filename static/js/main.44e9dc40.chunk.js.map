{"version":3,"sources":["components/header/header.js","components/search/search.js","components/tableHead/tableHead.js","components/table/table.js","utils/API.js","components/container/container.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Search","props","type","onChange","handleInputChange","placeholder","TableHead","className","onClick","sortNames","Table","employees","map","employee","src","picture","thumbnail","alt","name","first","last","phone","email","login","username","API","getEmployees","axios","get","Container","state","then","res","initialEmployeeList","data","results","setState","catch","err","console","log","e","searchName","target","value","searchNames","filteredEmployees","filter","uppercaseName","toUpperCase","uppercaseSearchName","includes","sortedEmployees","sort","a","b","nameA","nameB","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAaeA,MAVf,WACE,OACE,gCACE,oDACA,2EACA,yE,sCCKSC,MAVf,SAAgBC,GACd,OACE,uBACEC,KAAK,OACLC,SAAUF,EAAMG,kBAChBC,YAAY,e,MCQHC,MAbf,SAAmBL,GACjB,OACE,+BACE,yCACA,oBAAIM,UAAU,QAAQC,QAASP,EAAMQ,UAArC,kBAGA,yCACA,2CCoBSC,MA5Bf,SAAeT,GAGb,OACE,8BACE,wBAAOM,UAAU,YAAjB,UACE,gCACE,cAAC,EAAD,CAAWE,UAAWR,EAAMQ,cAE9B,gCACGR,EAAMU,UAAUC,KAAI,SAACC,GAAD,OACnB,+BACE,6BACE,qBAAKC,IAAKD,EAASE,QAAQC,UAAWC,IAAI,kBAE5C,+BACGJ,EAASK,KAAKC,MADjB,IACyBN,EAASK,KAAKE,QAEvC,6BAAKP,EAASQ,QACd,6BAAKR,EAASS,UARPT,EAASU,MAAMC,qB,iBCNrBC,EANH,CACVC,aAAc,WACZ,OAAOC,IAAMC,IAAI,kDC4ENC,G,kNAzEbC,MAAQ,CACNnB,UAAW,I,EAUbe,aAAe,WACbD,EAAIC,eACDK,MAAK,SAACC,GAEL,EAAKC,oBAAsBD,EAAIE,KAAKC,QACpC,EAAKC,SAAS,CAAEzB,UAAWqB,EAAIE,KAAKC,aAErCE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,O,EAGhClC,kBAAoB,SAACqC,GAEnB,IAAMC,EAAaD,EAAEE,OAAOC,MAGxBF,EACF,EAAKG,YAAYH,GACPA,GACV,EAAKN,SAAS,CAAEzB,UAAW,EAAKsB,uB,EAIpCY,YAAc,SAACH,GACbH,QAAQC,IAAI,wBACZ,IAAMM,EAAoB,EAAKb,oBAAoBc,QAAO,SAAClC,GACzD,IAAImC,EAAgBnC,EAASK,KAAKC,MAAM8B,cACpCC,EAAsBR,EAAWO,cACrC,OAAOD,EAAcG,SAASD,MAEhCX,QAAQC,IAAIM,GACZ,EAAKV,SAAS,CAAEzB,UAAWmC,K,EAG7BrC,UAAY,WACV8B,QAAQC,IAAI,sBACZ,IAAIY,EAAkB,EAAKtB,MAAMnB,UACjC4B,QAAQC,IAAIY,GACZA,EAAgBC,MAAK,SAAUC,EAAGC,GAChC,IAAIC,EAAQF,EAAEpC,KAAKC,MAAM8B,cACrBQ,EAAQF,EAAErC,KAAKC,MAAM8B,cACzB,OAAIO,EAAQC,GACF,EAEND,EAAQC,EACH,EAEF,KAET,EAAKrB,SAAS,CAAEzB,UAAWyC,IAC3Bb,QAAQC,IAAI,EAAKV,Q,kEArDjBS,QAAQC,IAAI,qBACZkB,KAAKhC,iB,+BAwDL,OACE,sBAAKnB,UAAU,YAAf,UACE,cAAC,EAAD,CAAQH,kBAAmBsD,KAAKtD,oBAChC,cAAC,EAAD,CAAOO,UAAW+C,KAAK5B,MAAMnB,UAAWF,UAAWiD,KAAKjD,mB,GApExCkD,c,MCSTC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44e9dc40.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div>\n      <h1>Employee Directory</h1>\n      <h4>Use the input box to filter by First Name</h4>\n      <h4>Click \"Name\" to sort alphabetically</h4>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Search(props) {\n  return (\n    <input\n      type=\"text\"\n      onChange={props.handleInputChange}\n      placeholder=\"Type Here\"\n    ></input>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction TableHead(props) {\n  return (\n    <tr>\n      <th>Picture</th>\n      <th className=\"hover\" onClick={props.sortNames}>\n        Name\n      </th>\n      <th>Phone #</th>\n      <th>Email</th>\n    </tr>\n  );\n}\n\nexport default TableHead;\n","import React from \"react\";\nimport TableHead from \"../tableHead/tableHead\";\n\nfunction Table(props) {\n  //   console.log(props.employees);\n\n  return (\n    <div>\n      <table className=\"container\">\n        <thead>\n          <TableHead sortNames={props.sortNames} />\n        </thead>\n        <tbody>\n          {props.employees.map((employee) => (\n            <tr key={employee.login.username}>\n              <td>\n                <img src={employee.picture.thumbnail} alt=\"Profile Pic\" />\n              </td>\n              <td>\n                {employee.name.first} {employee.name.last}\n              </td>\n              <td>{employee.phone}</td>\n              <td>{employee.email}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import axios from \"axios\";\n\nconst API = {\n  getEmployees: function () {\n    return axios.get(\"https://randomuser.me/api/?results=15&nat=us\");\n  },\n};\n\nexport default API;\n","import React, { Component } from \"react\";\nimport Search from \"../search/search\";\nimport Table from \"../table/table\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Container extends Component {\n  state = {\n    employees: [],\n  };\n\n  initialEmployeeList;\n\n  componentDidMount() {\n    console.log(\"Component Mounted\");\n    this.getEmployees();\n  }\n\n  getEmployees = () => {\n    API.getEmployees()\n      .then((res) => {\n        //console.log(res.data.results);\n        this.initialEmployeeList = res.data.results;\n        this.setState({ employees: res.data.results });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleInputChange = (e) => {\n    //console.log(this.initialEmployeeList);\n    const searchName = e.target.value;\n    //console.log(searchName);\n    //console.log(typeof searchName);\n    if (searchName) {\n      this.searchNames(searchName);\n    } else if (!searchName) {\n      this.setState({ employees: this.initialEmployeeList });\n    }\n  };\n\n  searchNames = (searchName) => {\n    console.log(\"searchNames funciton\");\n    const filteredEmployees = this.initialEmployeeList.filter((employee) => {\n      let uppercaseName = employee.name.first.toUpperCase();\n      let uppercaseSearchName = searchName.toUpperCase();\n      return uppercaseName.includes(uppercaseSearchName);\n    });\n    console.log(filteredEmployees);\n    this.setState({ employees: filteredEmployees });\n  };\n\n  sortNames = () => {\n    console.log(\"sortNames function\");\n    let sortedEmployees = this.state.employees;\n    console.log(sortedEmployees);\n    sortedEmployees.sort(function (a, b) {\n      let nameA = a.name.first.toUpperCase();\n      let nameB = b.name.first.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({ employees: sortedEmployees });\n    console.log(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Search handleInputChange={this.handleInputChange} />\n        <Table employees={this.state.employees} sortNames={this.sortNames} />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\nimport Header from \"./components/header/header\";\nimport Container from \"./components/container/container\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}